//===--- AutocheckWarnings.def - Autocheck diagnostic data ----------------===//
//
// Part of the Autocheck Project, under the Apache License v2.0 with Syrmia
// Exceptions. See LICENSE for details.
//
//===----------------------------------------------------------------------===//
//
// This file contains all data regarding autocheck diagnostics wrapped as macros
// to be used in other files.
//
// Signature of the macro is:
// DIAG(ENUM, FLAG, MESSAGE, RULE)
//
//===----------------------------------------------------------------------===//

#ifndef DIAG
#error "DIAG macro not defined"
#endif

DIAG(hashhashOpUsed, "hash-hash-op-used",
     "The # and ## operators should not be used", "M16-3-2")
DIAG(clibHeaderUsed, "clib-header-used",
     "The C library facilities shall only be accessed through C++ library "
     "headers",
     "A18-0-1")
DIAG(csignalUsed, "csignal-used",
     "The signal handling facilities of <csignal> shall not be used", "M18-7-1")
DIAG(cstdioUsed, "cstdio-used",
     "The stream input/output library <cstdio> shall not be used", "M27-0-1")
DIAG(ctimeUsed, "ctime-used",
     "The time handling functions of library <ctime> shall not be used",
     "M18-0-4")
DIAG(localeHeaderUsed, "locale-header-used",
     "The library <clocale> (locale.h) and the setlocale function shall not be "
     "used",
     "A18-0-3")
DIAG(pragmaDirectiveUsed, "pragma-directive-used",
     "The #pragma directive shall not be used", "A16-7-1")
DIAG(headerExtension, "header-extension",
     "Header files, that are defined locally in the project, shall have a file "
     "name extension of one of: \".h\", \".hpp\" or \".hxx\"",
     "A3-1-2")
DIAG(errnoUsed, "errno-used", "The error indicator errno shall not be used",
     "M19-3-1")
DIAG(offsetofUsed, "offsetof-used", "The macro offsetof shall not be used",
     "M18-2-1")
DIAG(setjmpLongjmpUsed, "setjmp-longjmp-used",
     "The setjmp macro and the longjmp function shall not be used", "M17-0-5")
DIAG(bothHashOpUsed, "both-hash-op-used",
     "There shall be at most one occurrence of the # or ## operators in a "
     "single macro definition",
     "M16-3-1")
DIAG(expansionToDefined, "expansion-to-defined",
     "The defined pre-processor operator shall only be used in one of the two "
     "standard forms",
     "M16-1-1")
DIAG(reservedIdentifiers, "reserved-identifiers",
     "Reserved identifiers, macros and functions in the C++ standard library "
     "shall not be defined, redefined or undefined",
     "A17-0-1")
DIAG(embeddedDirective, "embedded-directive",
     "Arguments to a function-like macro shall not contain tokens that look "
     "like pre-processing directives",
     "M16-0-5")
DIAG(digraphsUsed, "digraphs-used", "Digraphs shall not be used", "A2-5-2")
DIAG(trigraphsUsed, "trigraphs-used", "Trigraphs shall not be used", "A2-5-1")
DIAG(hexConstUpperCase, "hex-const-upper-case",
     "Hexadecimal constants should be upper case", "A2-13-5")
DIAG(includeDirectiveRestrictedChar, "include-directive-restricted-char",
     "The ', \", /*, //, \\ characters shall not occur in a header file name "
     "or in #include directive",
     "A16-2-1")
DIAG(lineCommentLastChar, "line-comment-last-char",
     "The character \\ shall not occur as a last character of a C++ comment",
     "A2-7-1")
DIAG(preprocessorTokenError, "preprocessor-token-error",
     "If the # token appears as the first token on a line, then it shall be "
     "immediately followed by a pre-processing token",
     "M16-0-8")
DIAG(directiveErrorUsed, "directive-error-used",
     "#error directive shall not be used", "A16-6-1")
DIAG(commentStartInComment, "comment",
     "The character sequence /* shall not be used within a C-style comment",
     "M2-7-1")
DIAG(octalConstantUsed, "octal-constant-used",
     "Octal constants (other than zero) and octal escape sequences (other than "
     "\"\\0\") shall not be used",
     "M2-13-2")
DIAG(nonIsoEscapeSequence, "non-iso-escape-sequence",
     "Only those escape sequences that are defined in ISO/IEC 14882:2014 shall "
     "be used",
     "A2-13-1")
DIAG(nonCppStandardCharUsed, "non-cplusplus-standard-char-used",
     "Only those characters specified in the C++ Language Standard basic "
     "source character set shall be used in the source code",
     "A2-3-1")
DIAG(literalSuffixLowerCase, "literal-suffix-lower-case",
     "Literal suffixes shall be upper case", "M2-13-4")
DIAG(digitSequenceSeparator, "digit-sequence-separator",
     "Digit sequences separators ' shall only be used as follows: (1) for "
     "decimal, every 3 digits, (2) for hexadecimal, every 2 digits, (3) for "
     "binary, every 4 digits",
     "A13-6-1")
DIAG(nonUniversalNames, "non-universal-names",
     "Universal character names shall be used only inside character or string "
     "literals",
     "A2-13-6")
DIAG(unsignedLiteralSuffix, "unsigned-literal-suffix",
     "A \"U\" suffix shall be applied to all octal or hexadecimal integer "
     "literals of unsigned type",
     "M2-13-3")
DIAG(similarIdentifiers, "similar-identifiers",
     "Different identifiers shall be typographically unambiguous", "M2-10-1")
DIAG(shadowClassOrEnum, "shadow-class-or-enum",
     "A class or enumeration name shall not be hidden by a variable, function "
     "or enumerator declaration in the same scope",
     "A2-10-6")
DIAG(fixedWidthIntegerTypes, "fixed-width-integer-types",
     "Fixed width integer types from <cstdint>, indicating the size and "
     "signedness, shall be used in place of the basic numerical types",
     "A3-9-1")
DIAG(nullStatementNotAlone, "null-stmt-not-alone",
     "Before preprocessing, a null statement shall only occur on a line by "
     "itself; it may be followed by a comment, provided that the first "
     "character following the null statement is a white-space character",
     "M6-2-3")
DIAG(usingInsideHeader, "using-inside-header",
     "Using-directives and using-declarations (excluding class scope or "
     "function scope using-declarations) shall not be used in header files",
     "M7-3-6")
DIAG(separateLineExpressionStatement, "separate-line-expression-statement",
     "Each expression statement and identifier declaration shall be placed on "
     "a separate line",
     "A7-1-7")

#undef DIAG
